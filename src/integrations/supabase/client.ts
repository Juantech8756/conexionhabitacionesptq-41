
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jnudcjgbplvxwrbnrlju.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpudWRjamdicGx2eHdyYm5ybGp1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY3NjM1MTksImV4cCI6MjA2MjMzOTUxOX0.YFthBcpzlYQE8YcBAZCfUUj6GFjDIkhsxWxQl0vyQQ0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Check and create necessary storage buckets
(async function initializeStorage() {
  try {
    // Check if chat_media bucket exists
    const { data: buckets, error: listError } = await supabase.storage.listBuckets();
    
    if (listError) {
      console.error('Error checking storage buckets:', listError);
      return;
    }

    const chatMediaBucket = buckets?.find(bucket => bucket.name === 'chat_media');
    
    // Create chat_media bucket if it doesn't exist
    if (!chatMediaBucket) {
      console.log('Creating chat_media storage bucket...');
      const { data, error } = await supabase.storage.createBucket('chat_media', {
        public: true,
        fileSizeLimit: 10485760, // 10MB limit
        allowedMimeTypes: ['image/*', 'video/*']
      });
      
      if (error) {
        console.error('Error creating chat_media bucket:', error);
      } else {
        console.log('Created chat_media bucket successfully');
      }
    }

    // Set up RLS and public access policies for the bucket if needed
    // Note: This is handled server-side and would require additional SQL queries
  } catch (err) {
    console.error('Failed to initialize storage:', err);
  }
})();
